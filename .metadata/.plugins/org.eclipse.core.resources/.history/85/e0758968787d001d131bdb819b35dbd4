package com.fsc.jwt.service;



import java.util.List;
import java.util.logging.Logger;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.security.core.userdetails.UserDetailsService;
import org.springframework.security.core.userdetails.UsernameNotFoundException;
import org.springframework.stereotype.Service;

import com.fsc.jwt.Dto.UserDto;
import com.fsc.jwt.exception.ResourceNotFoundException;
import com.fsc.jwt.mapper.DozerMapper;
import com.fsc.jwt.repository.UserRepository;



@Service
public class UserService implements UserDetailsService {

	private Logger logger = Logger.getLogger(UserService.class.getName());
	
	@Autowired
	private UserRepository userRepository;

	@Override
	public UserDetails loadUserByUsername(String username) throws UsernameNotFoundException {
		
		return null;
	}
	
	public UserDto readId(Long id) {
		logger.info("Service findById");
		
		var entity = userRepository.findById(id)
				.orElseThrow(() -> new ResourceNotFoundException("This is id " + id + " no exists in repository"));
	
		var  dto = DozerMapper.parseObject(entity, UserDto.class);
		
		return dto;
	}

}
